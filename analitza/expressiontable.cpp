// This file was generated by qlalr - DO NOT EDIT!
#include "expressiontable_p.h"

const char *const ExpressionTable::spell [] = {
  "end of file", "+", "-", "*", ":=", "..", "/", "^", "identifier", "->", 
  "?", ",", "(", ")", "{", "}", "value", "=", "<", ">", 
  ">=", "<=", "!=", ":", "@", 0, 0, 
#ifndef QLALR_NO_EXPRESSIONTABLE_DEBUG_INFO
"Program", "Expression", "Id", 
  "Number", "Value", "PrimaryExpression", "PrimaryExpressionExt", "FunctionId", "FBody", "Parameters", "BVars", "Limits", "BValue", 
  "BVarList", "$accept"
#endif // QLALR_NO_EXPRESSIONTABLE_DEBUG_INFO
};

const int ExpressionTable::lhs [] = {
  27, 29, 30, 31, 31, 32, 33, 33, 28, 34, 
  34, 28, 28, 28, 35, 35, 35, 35, 32, 32, 
  28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 
  28, 28, 28, 28, 28, 28, 28, 36, 36, 37, 
  37, 39, 40, 40, 38, 41};

const int ExpressionTable:: rhs[] = {
  1, 1, 1, 1, 1, 1, 3, 1, 1, 3, 
  1, 2, 4, 3, 1, 3, 5, 5, 3, 4, 
  3, 2, 2, 3, 3, 3, 2, 3, 3, 3, 
  3, 3, 3, 3, 3, 3, 3, 1, 3, 1, 
  3, 1, 3, 3, 3, 2};


#ifndef QLALR_NO_EXPRESSIONTABLE_DEBUG_INFO
const int ExpressionTable::rule_info [] = {
    27, 28
  , 29, 8
  , 30, 16
  , 31, 30
  , 31, 29
  , 32, 31
  , 33, 12, 28, 13
  , 33, 32
  , 28, 33
  , 34, 12, 28, 13
  , 34, 29
  , 28, 34, 32
  , 28, 34, 12, 35, 13
  , 28, 34, 12, 13
  , 35, 36
  , 35, 36, 23, 37
  , 35, 36, 23, 37, 17, 38
  , 35, 36, 23, 37, 24, 28
  , 32, 29, 14, 15
  , 32, 29, 14, 36, 15
  , 28, 37, 9, 28
  , 28, 2, 28
  , 28, 10, 28
  , 28, 28, 1, 28
  , 28, 28, 2, 28
  , 28, 28, 3, 28
  , 28, 30, 33
  , 28, 28, 6, 28
  , 28, 28, 7, 28
  , 28, 28, 17, 28
  , 28, 28, 20, 28
  , 28, 28, 21, 28
  , 28, 28, 18, 28
  , 28, 28, 19, 28
  , 28, 28, 22, 28
  , 28, 28, 10, 28
  , 28, 29, 4, 28
  , 36, 28
  , 36, 36, 11, 28
  , 37, 39
  , 37, 12, 40, 13
  , 39, 29
  , 40, 39, 11, 39
  , 40, 40, 11, 39
  , 38, 33, 5, 33
  , 41, 27, 0};

const int ExpressionTable::rule_index [] = {
  0, 2, 4, 6, 8, 10, 12, 16, 18, 20, 
  24, 26, 29, 34, 38, 40, 44, 50, 56, 60, 
  65, 69, 72, 75, 79, 83, 87, 90, 94, 98, 
  102, 106, 110, 114, 118, 122, 126, 130, 132, 136, 
  138, 142, 144, 148, 152, 156};
#endif // QLALR_NO_EXPRESSIONTABLE_DEBUG_INFO

const int ExpressionTable::action_default [] = {
  0, 40, 0, 1, 0, 5, 4, 8, 9, 0, 
  6, 2, 0, 0, 0, 3, 0, 21, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  24, 28, 30, 32, 34, 31, 33, 26, 35, 29, 
  36, 25, 5, 4, 12, 0, 0, 38, 0, 19, 
  0, 20, 39, 0, 15, 14, 13, 0, 16, 42, 
  0, 0, 0, 18, 17, 0, 0, 0, 45, 0, 
  7, 0, 0, 0, 43, 0, 41, 44, 0, 37, 
  27, 46, 40, 0, 5, 7, 23, 22};

const int ExpressionTable::goto_default [] = {
  9, 47, 5, 6, 10, 7, 8, 4, 53, 54, 
  2, 64, 1, 72, 0};

const int ExpressionTable::action_index [] = {
  89, -27, -1, 192, 21, 111, 39, -27, -27, 0, 
  -27, -27, 89, 89, 89, -27, 64, 192, 89, 89, 
  89, 89, 89, 89, 89, 89, 64, 64, 89, 64, 
  19, 20, 62, 55, 83, 115, 115, -3, 76, -27, 
  166, 17, -11, -27, -27, 140, 92, 192, 2, -27, 
  89, -27, 192, 1, 7, -27, -27, 3, -8, -27, 
  -2, 38, 39, 192, -27, -4, 26, 39, -27, 218, 
  -27, -6, 8, -2, -27, -2, -27, -27, 64, 192, 
  -27, -27, -9, 244, 120, 23, 192, -27, 

  1, -15, -15, -15, 22, -15, 40, -15, -15, -15, 
  -15, -15, 28, -1, 6, -15, 17, -15, 16, 9, 
  14, 7, 8, 10, 27, 11, 12, 18, 13, 2, 
  -15, -15, -15, -15, -15, -15, -15, -15, -15, -15, 
  -15, -15, -15, -15, -15, -15, -4, -15, -15, -15, 
  0, -15, -15, -15, -15, -15, -15, 24, -15, -15, 
  19, 15, 35, -15, -15, -15, 5, 33, -15, -15, 
  -15, -15, -15, 21, -15, 20, -15, -15, 3, -15, 
  -15, -15, -15, -15, -15, -15, -15, -15};

const int ExpressionTable::action_info [] = {
  81, 67, 73, 46, 27, 73, 11, 0, 16, 62, 
  0, 11, 0, 50, 56, 60, 61, 51, 50, 75, 
  25, 76, 25, 19, 27, 19, 27, 27, 14, 11, 
  57, -10, 0, 45, 11, -10, 13, 15, 12, -10, 
  14, 0, 15, 0, 0, 0, 11, 11, 13, 0, 
  12, 66, 0, 0, 15, 15, 18, 29, 25, 0, 
  0, 19, 27, 18, 29, 25, 14, 0, 19, 27, 
  0, 0, 11, 0, 13, 0, 12, 18, 29, 25, 
  15, 0, 19, 27, 18, 29, 25, 0, 0, 19, 
  27, 14, 0, 0, 14, 0, 0, 11, 0, 13, 
  11, 12, 13, 0, 12, 15, 0, 49, 15, 0, 
  0, 0, 0, 0, 0, 78, 18, 29, 25, -11, 
  -42, 19, 27, -11, 78, 46, 0, -11, -11, -42, 
  0, -42, -11, 0, 46, 0, -11, 0, 0, 0, 
  0, 0, 14, 0, 0, 0, 0, 0, 11, 0, 
  13, 0, 12, 55, 0, 0, 15, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 18, 29, 25, 
  0, 0, 19, 27, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 20, 24, 22, 23, 21, 26, 0, 
  0, 0, 0, 18, 29, 25, 0, 0, 19, 27, 
  0, 0, 28, 0, 0, 0, 0, 0, 0, 20, 
  24, 22, 23, 21, 26, 0, 0, 0, 0, 18, 
  29, 25, 0, 0, 19, 27, 0, 0, 28, 0, 
  0, 70, 0, 0, 0, 20, 24, 22, 23, 21, 
  26, 0, 0, 0, 0, 18, 29, 25, 0, 0, 
  19, 27, 0, 0, 28, 0, 0, 85, 0, 0, 
  0, 20, 24, 22, 23, 21, 26, 0, 0, 0, 
  0, 

  86, 52, 3, 41, 79, 48, 69, 87, 33, 34, 
  31, 35, 37, 38, 40, 32, 63, 30, 17, 39, 
  0, 59, 59, 59, 42, 43, 59, 44, 36, 83, 
  84, 71, 77, 74, 58, 42, 43, 42, 43, 68, 
  82, 65, 42, 43, 0, 0, 80, 0, 0, 0, 
  0, 0, 0, 0, 0};

const int ExpressionTable::action_check [] = {
  0, 5, 11, 14, 7, 11, 8, -1, 9, 17, 
  -1, 8, -1, 11, 13, 12, 24, 15, 11, 11, 
  3, 13, 3, 6, 7, 6, 7, 7, 2, 8, 
  23, 8, -1, 12, 8, 12, 10, 16, 12, 16, 
  2, -1, 16, -1, -1, -1, 8, 8, 10, -1, 
  12, 12, -1, -1, 16, 16, 1, 2, 3, -1, 
  -1, 6, 7, 1, 2, 3, 2, -1, 6, 7, 
  -1, -1, 8, -1, 10, -1, 12, 1, 2, 3, 
  16, -1, 6, 7, 1, 2, 3, -1, -1, 6, 
  7, 2, -1, -1, 2, -1, -1, 8, -1, 10, 
  8, 12, 10, -1, 12, 16, -1, 15, 16, -1, 
  -1, -1, -1, -1, -1, 4, 1, 2, 3, 8, 
  9, 6, 7, 12, 4, 14, -1, 16, 8, 9, 
  -1, 11, 12, -1, 14, -1, 16, -1, -1, -1, 
  -1, -1, 2, -1, -1, -1, -1, -1, 8, -1, 
  10, -1, 12, 13, -1, -1, 16, -1, -1, -1, 
  -1, -1, -1, -1, -1, -1, -1, 1, 2, 3, 
  -1, -1, 6, 7, -1, -1, -1, -1, -1, -1, 
  -1, -1, -1, 17, 18, 19, 20, 21, 22, -1, 
  -1, -1, -1, 1, 2, 3, -1, -1, 6, 7, 
  -1, -1, 10, -1, -1, -1, -1, -1, -1, 17, 
  18, 19, 20, 21, 22, -1, -1, -1, -1, 1, 
  2, 3, -1, -1, 6, 7, -1, -1, 10, -1, 
  -1, 13, -1, -1, -1, 17, 18, 19, 20, 21, 
  22, -1, -1, -1, -1, 1, 2, 3, -1, -1, 
  6, 7, -1, -1, 10, -1, -1, 13, -1, -1, 
  -1, 17, 18, 19, 20, 21, 22, -1, -1, -1, 
  -1, 

  1, 1, 1, 1, 1, 9, 1, 1, 1, 1, 
  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
  -1, 2, 2, 2, 2, 3, 2, 5, 1, 1, 
  2, 12, 12, 12, 10, 2, 3, 2, 3, 6, 
  12, 6, 2, 3, -1, -1, 6, -1, -1, -1, 
  -1, -1, -1, -1, -1};

