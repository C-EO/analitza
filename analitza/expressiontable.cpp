// This file was generated by qlalr - DO NOT EDIT!
#include "expressiontable_p.h"

const char *const ExpressionTable::spell [] = {
  "end of file", "+", "-", "*", ":=", "..", "/", "^", "identifier", "->", 
  "?", ",", "(", ")", "{", "}", "[", "]", "value", "=", 
  "<", ">", ">=", "<=", "!=", ":", "@", "//Comment//", "abc", 0, 
  0, 
#ifndef QLALR_NO_EXPRESSIONTABLE_DEBUG_INFO
"Program", "Declaration", "Expression", "Id", "String", "Number", "Value", "PrimaryExpression", "PrimaryExpressionExt", 
  "SubscriptExpression", "FunctionId", "FBody", "Parameters", "BVars", "Limits", "BValue", "BVarList", "$accept"
#endif // QLALR_NO_EXPRESSIONTABLE_DEBUG_INFO
};

const int ExpressionTable::lhs [] = {
  31, 31, 31, 32, 34, 35, 36, 37, 37, 37, 
  38, 39, 40, 39, 39, 33, 41, 41, 33, 39, 
  39, 42, 42, 42, 42, 38, 38, 33, 33, 33, 
  33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 
  33, 33, 33, 43, 43, 44, 44, 46, 47, 47, 
  45, 48};

const int ExpressionTable:: rhs[] = {
  0, 1, 1, 3, 1, 1, 1, 1, 1, 1, 
  1, 3, 4, 1, 1, 1, 3, 1, 2, 4, 
  3, 1, 3, 5, 5, 3, 4, 3, 2, 2, 
  3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 
  3, 3, 3, 1, 3, 1, 3, 1, 3, 3, 
  3, 2};


#ifndef QLALR_NO_EXPRESSIONTABLE_DEBUG_INFO
const int ExpressionTable::rule_info [] = {
    31
  , 31, 32
  , 31, 33
  , 32, 34, 4, 33
  , 34, 8
  , 35, 28
  , 36, 18
  , 37, 36
  , 37, 35
  , 37, 34
  , 38, 37
  , 39, 12, 33, 13
  , 40, 39, 16, 33, 17
  , 39, 38
  , 39, 40
  , 33, 39
  , 41, 12, 33, 13
  , 41, 34
  , 33, 41, 38
  , 39, 41, 12, 42, 13
  , 39, 41, 12, 13
  , 42, 43
  , 42, 43, 25, 44
  , 42, 43, 25, 44, 19, 45
  , 42, 43, 25, 44, 26, 33
  , 38, 34, 14, 15
  , 38, 34, 14, 43, 15
  , 33, 44, 9, 33
  , 33, 2, 33
  , 33, 10, 33
  , 33, 33, 1, 33
  , 33, 33, 2, 33
  , 33, 33, 3, 33
  , 33, 36, 39
  , 33, 33, 6, 33
  , 33, 33, 7, 33
  , 33, 33, 19, 33
  , 33, 33, 22, 33
  , 33, 33, 23, 33
  , 33, 33, 20, 33
  , 33, 33, 21, 33
  , 33, 33, 24, 33
  , 33, 33, 10, 33
  , 43, 33
  , 43, 43, 11, 33
  , 44, 46
  , 44, 12, 47, 13
  , 46, 34
  , 47, 46, 11, 46
  , 47, 47, 11, 46
  , 45, 39, 5, 39
  , 48, 31, 0};

const int ExpressionTable::rule_index [] = {
  0, 1, 3, 5, 9, 11, 13, 15, 17, 19, 
  21, 23, 27, 32, 34, 36, 38, 42, 44, 47, 
  52, 56, 58, 62, 68, 74, 78, 83, 87, 90, 
  93, 97, 101, 105, 108, 112, 116, 120, 124, 128, 
  132, 136, 140, 144, 146, 150, 152, 156, 158, 162, 
  166, 170};
#endif // QLALR_NO_EXPRESSIONTABLE_DEBUG_INFO

const int ExpressionTable::action_default [] = {
  1, 46, 0, 2, 3, 0, 10, 8, 14, 16, 
  0, 9, 15, 11, 5, 0, 0, 6, 0, 7, 
  0, 28, 10, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 31, 35, 37, 39, 41, 
  38, 40, 33, 42, 36, 43, 32, 0, 44, 0, 
  26, 0, 27, 45, 10, 8, 19, 0, 0, 22, 
  21, 20, 0, 23, 48, 0, 0, 0, 25, 0, 
  10, 24, 0, 0, 0, 0, 51, 0, 13, 0, 
  12, 0, 0, 0, 49, 0, 47, 50, 0, 4, 
  34, 52, 46, 10, 30, 29};

const int ExpressionTable::goto_default [] = {
  10, 3, 48, 22, 11, 7, 13, 8, 9, 12, 
  5, 58, 49, 2, 71, 1, 82, 0};

const int ExpressionTable::action_index [] = {
  120, -31, -1, -31, 168, 61, 95, 34, -31, -12, 
  38, -31, -31, -31, -31, 120, 120, -31, 120, -31, 
  120, 209, 73, 120, 120, 120, 120, 120, 120, 120, 
  120, 120, 120, 120, 120, 24, -4, 91, 91, 91, 
  91, 91, 4, 91, -31, 179, 29, 125, 209, 1, 
  -31, 120, -31, 209, -13, -31, -31, 149, -3, 3, 
  -31, -31, 9, -6, -31, 7, 46, 33, 209, -10, 
  10, -31, 13, 47, 25, 68, -16, 269, -31, 239, 
  32, -2, 12, 7, -31, 7, -31, -31, 120, 209, 
  -11, -31, -5, 103, 209, 0, 

  24, -18, -18, -18, -18, 45, -18, 60, -18, -18, 
  -18, -18, -18, -18, -18, 26, 16, -18, 30, -18, 
  12, -18, -18, 9, 15, 14, 11, 8, 17, -1, 
  6, -2, 2, 1, 5, -18, -18, -18, -18, -18, 
  -18, -18, -18, -18, -18, -18, -18, -18, -18, -18, 
  -18, 0, -18, -18, -18, -18, -18, 10, -18, -18, 
  -18, -18, 21, -18, -18, 18, 7, 35, -18, -18, 
  -18, -18, -18, 13, 39, 4, -18, -18, -18, -18, 
  -18, -18, -18, 22, -18, 20, -18, -18, 3, -18, 
  -18, -18, -18, -18, -18, -18};

const int ExpressionTable::action_info [] = {
  75, 47, 57, 32, 75, 75, 83, 32, 20, 83, 
  61, 32, 51, 67, 51, 14, 52, 14, 74, 0, 
  66, 65, -18, 85, 47, 86, 0, 30, 62, 75, 
  24, 32, 30, 14, 0, 24, 32, 73, 91, 0, 
  -17, 14, 14, 19, -17, 73, 73, 0, 18, 18, 
  -17, 19, 19, 17, 14, 14, 16, 16, 15, 15, 
  -17, 17, 17, 0, 19, 19, 0, 0, 0, 14, 
  18, 0, 0, 57, 17, 17, 14, 0, 16, 19, 
  15, -18, -48, 0, 0, -18, 19, 47, 0, 17, 
  0, -18, 23, 34, 30, 0, 17, 24, 32, 88, 
  0, -18, 0, -18, -48, 0, 0, -18, 0, 47, 
  0, -18, -48, -18, -48, -18, 0, 47, 0, 0, 
  0, -18, 18, -18, 0, 0, 0, 18, 14, 0, 
  16, -18, 15, 14, 0, 16, 0, 15, 19, 0, 
  50, 0, 0, 19, 0, 0, 0, 0, 17, 0, 
  0, 18, 0, 17, 0, 0, 0, 14, 0, 16, 
  0, 15, 60, 0, 0, 0, 0, 19, 0, 23, 
  34, 30, 0, 0, 24, 32, 0, 17, 33, 0, 
  23, 34, 30, 0, 0, 24, 32, 25, 29, 27, 
  28, 26, 31, 0, 0, 0, 0, 0, 25, 29, 
  27, 28, 26, 31, 0, 0, 0, 0, 0, 0, 
  23, 34, 30, 0, 0, 24, 32, 0, 0, 33, 
  0, 0, 0, 0, 0, 0, 0, 0, 25, 29, 
  27, 28, 26, 31, 0, 0, 0, 0, 0, 0, 
  23, 34, 30, 0, 0, 24, 32, 0, 0, 33, 
  0, 0, 80, 0, 0, 0, 0, 0, 25, 29, 
  27, 28, 26, 31, 0, 0, 0, 0, 0, 0, 
  23, 34, 30, 0, 0, 24, 32, 0, 0, 33, 
  0, 0, 0, 0, 0, 0, 78, 0, 25, 29, 
  27, 28, 26, 31, 0, 0, 0, 0, 0, 0, 

  43, 41, 53, 45, 44, 89, 77, 46, 42, 68, 
  39, 35, 0, 38, 21, 79, 37, 36, 94, 40, 
  0, 64, 59, 64, 64, 64, 4, 6, 79, 93, 
  0, 0, 95, 81, 63, 87, 0, 84, 70, 0, 
  55, 92, 70, 72, 55, 69, 0, 76, 54, 69, 
  55, 0, 56, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 70, 0, 55, 0, 0, 90, 0, 
  69, 0, 0, 0, 0, 0, 0, 0};

const int ExpressionTable::action_check [] = {
  16, 14, 12, 7, 16, 16, 11, 7, 9, 11, 
  13, 7, 11, 19, 11, 8, 15, 8, 5, -1, 
  26, 12, 12, 11, 14, 13, -1, 3, 25, 16, 
  6, 7, 3, 8, -1, 6, 7, 12, 0, -1, 
  8, 8, 8, 18, 12, 12, 12, -1, 2, 2, 
  18, 18, 18, 28, 8, 8, 10, 10, 12, 12, 
  28, 28, 28, -1, 18, 18, -1, -1, -1, 8, 
  2, -1, -1, 12, 28, 28, 8, -1, 10, 18, 
  12, 8, 9, -1, -1, 12, 18, 14, -1, 28, 
  -1, 18, 1, 2, 3, -1, 28, 6, 7, 4, 
  -1, 28, -1, 8, 9, -1, -1, 12, -1, 14, 
  -1, 8, 9, 18, 11, 12, -1, 14, -1, -1, 
  -1, 18, 2, 28, -1, -1, -1, 2, 8, -1, 
  10, 28, 12, 8, -1, 10, -1, 12, 18, -1, 
  15, -1, -1, 18, -1, -1, -1, -1, 28, -1, 
  -1, 2, -1, 28, -1, -1, -1, 8, -1, 10, 
  -1, 12, 13, -1, -1, -1, -1, 18, -1, 1, 
  2, 3, -1, -1, 6, 7, -1, 28, 10, -1, 
  1, 2, 3, -1, -1, 6, 7, 19, 20, 21, 
  22, 23, 24, -1, -1, -1, -1, -1, 19, 20, 
  21, 22, 23, 24, -1, -1, -1, -1, -1, -1, 
  1, 2, 3, -1, -1, 6, 7, -1, -1, 10, 
  -1, -1, -1, -1, -1, -1, -1, -1, 19, 20, 
  21, 22, 23, 24, -1, -1, -1, -1, -1, -1, 
  1, 2, 3, -1, -1, 6, 7, -1, -1, 10, 
  -1, -1, 13, -1, -1, -1, -1, -1, 19, 20, 
  21, 22, 23, 24, -1, -1, -1, -1, -1, -1, 
  1, 2, 3, -1, -1, 6, 7, -1, -1, 10, 
  -1, -1, -1, -1, -1, -1, 17, -1, 19, 20, 
  21, 22, 23, 24, -1, -1, -1, -1, -1, -1, 

  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
  2, 2, -1, 2, 2, 2, 2, 2, 2, 2, 
  -1, 3, 12, 3, 3, 3, 2, 3, 2, 3, 
  -1, -1, 2, 15, 13, 15, -1, 15, 3, -1, 
  5, 15, 3, 8, 5, 10, -1, 8, 3, 10, 
  5, -1, 7, -1, -1, -1, -1, -1, -1, -1, 
  -1, -1, -1, 3, -1, 5, -1, -1, 8, -1, 
  10, -1, -1, -1, -1, -1, -1, -1};

