// This file was generated by qlalr - DO NOT EDIT!
#include "expressiontable_p.h"

const char *const ExpressionTable::spell [] = {
  "end of file", "+", "-", "*", ":=", "..", "/", "^", "identifier", "->", 
  "?", ",", "(", ")", "{", "}", "value", "=", "<", ">", 
  ">=", "<=", "!=", ":", 0, 0, 
#ifndef QLALR_NO_EXPRESSIONTABLE_DEBUG_INFO
"Program", "Expression", "Id", "Number", 
  "Value", "PrimaryExpression", "PrimaryExpressionExt", "FunctionId", "FBody", "Parameters", "BVars", "Limits", "BValue", "BVarList", 
  "$accept"
#endif // QLALR_NO_EXPRESSIONTABLE_DEBUG_INFO
};

const int ExpressionTable::lhs [] = {
  26, 28, 29, 30, 30, 31, 32, 32, 27, 33, 
  33, 27, 27, 27, 34, 34, 34, 31, 31, 27, 
  27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 
  27, 27, 27, 27, 27, 27, 35, 35, 36, 36, 
  38, 39, 39, 37, 40};

const int ExpressionTable:: rhs[] = {
  1, 1, 1, 1, 1, 1, 3, 1, 1, 3, 
  1, 2, 4, 3, 1, 3, 5, 3, 4, 3, 
  2, 2, 3, 3, 3, 2, 3, 3, 3, 3, 
  3, 3, 3, 3, 3, 3, 1, 3, 1, 3, 
  1, 3, 3, 3, 2};


#ifndef QLALR_NO_EXPRESSIONTABLE_DEBUG_INFO
const int ExpressionTable::rule_info [] = {
    26, 27
  , 28, 8
  , 29, 16
  , 30, 29
  , 30, 28
  , 31, 30
  , 32, 12, 27, 13
  , 32, 31
  , 27, 32
  , 33, 12, 27, 13
  , 33, 28
  , 27, 33, 31
  , 27, 33, 12, 34, 13
  , 27, 33, 12, 13
  , 34, 35
  , 34, 35, 23, 36
  , 34, 35, 23, 36, 17, 37
  , 31, 28, 14, 15
  , 31, 28, 14, 35, 15
  , 27, 36, 9, 27
  , 27, 2, 27
  , 27, 10, 27
  , 27, 27, 1, 27
  , 27, 27, 2, 27
  , 27, 27, 3, 27
  , 27, 29, 32
  , 27, 27, 6, 27
  , 27, 27, 7, 27
  , 27, 27, 17, 27
  , 27, 27, 20, 27
  , 27, 27, 21, 27
  , 27, 27, 18, 27
  , 27, 27, 19, 27
  , 27, 27, 22, 27
  , 27, 27, 10, 27
  , 27, 28, 4, 27
  , 35, 27
  , 35, 35, 11, 27
  , 36, 38
  , 36, 12, 39, 13
  , 38, 28
  , 39, 38, 11, 38
  , 39, 39, 11, 38
  , 37, 32, 5, 32
  , 40, 26, 0};

const int ExpressionTable::rule_index [] = {
  0, 2, 4, 6, 8, 10, 12, 16, 18, 20, 
  24, 26, 29, 34, 38, 40, 44, 50, 54, 59, 
  63, 66, 69, 73, 77, 81, 84, 88, 92, 96, 
  100, 104, 108, 112, 116, 120, 124, 126, 130, 132, 
  136, 138, 142, 146, 150};
#endif // QLALR_NO_EXPRESSIONTABLE_DEBUG_INFO

const int ExpressionTable::action_default [] = {
  0, 39, 0, 1, 0, 5, 4, 8, 9, 0, 
  6, 2, 0, 0, 0, 3, 0, 20, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  23, 27, 29, 31, 33, 30, 32, 25, 34, 28, 
  35, 24, 5, 4, 12, 0, 0, 37, 0, 18, 
  0, 19, 38, 0, 15, 14, 13, 0, 16, 41, 
  0, 0, 17, 0, 0, 0, 44, 0, 7, 0, 
  0, 0, 42, 0, 40, 43, 0, 36, 26, 45, 
  39, 0, 5, 7, 22, 21};

const int ExpressionTable::goto_default [] = {
  9, 47, 5, 6, 10, 7, 8, 4, 53, 54, 
  2, 62, 1, 70, 0};

const int ExpressionTable::action_index [] = {
  127, -26, -1, 221, 28, 149, 30, -26, -26, 4, 
  -26, -26, 127, 127, 127, -26, 127, 221, 78, 78, 
  78, 46, 78, 91, 127, 127, 127, 127, 79, 78, 
  27, -4, 69, 110, 103, 76, 62, 0, 117, -26, 
  196, 54, -12, -26, -26, 138, 126, 221, 5, -26, 
  127, -26, 221, -2, 3, -26, -26, 31, -11, -26, 
  -3, 15, -26, 13, 78, 29, -26, 246, -26, -10, 
  6, -8, -26, 1, -26, -26, 78, 221, -26, -26, 
  2, 271, 171, 16, 221, -26, 

  2, -15, -15, -15, 36, -15, 34, -15, -15, -15, 
  -15, -15, 23, 6, 0, -15, 15, -15, 11, 10, 
  8, 9, 7, 12, 14, 16, 17, 5, -1, 4, 
  -15, -15, -15, -15, -15, -15, -15, -15, -15, -15, 
  -15, -15, -15, -15, -15, -15, -7, -15, -15, -15, 
  13, -15, -15, -15, -15, -15, -15, 19, -15, -15, 
  21, 40, -15, -15, 27, 53, -15, -15, -15, -15, 
  -15, 18, -15, 20, -15, -15, 3, -15, -15, -15, 
  -15, -15, -15, -15, -15, -15};

const int ExpressionTable::action_info [] = {
  11, 71, 46, 27, 79, 11, 61, 27, 16, 11, 
  0, 56, 0, 71, 50, 0, 50, 73, 65, 74, 
  51, 0, 0, 11, -10, 0, 57, 64, -10, 0, 
  25, 15, -10, 19, 27, 0, 11, 11, 11, 11, 
  45, 64, 64, 60, 15, 15, 15, 0, 14, 0, 
  0, 0, 0, 0, 11, 0, 13, 25, 12, 0, 
  19, 27, 15, 18, 29, 25, 0, 0, 19, 27, 
  18, 29, 25, 0, 0, 19, 27, 18, 29, 25, 
  14, 14, 19, 27, 0, 0, 11, 11, 13, 13, 
  12, 12, 0, 14, 15, 15, 0, 0, 0, 11, 
  0, 13, 0, 12, 18, 29, 25, 15, 0, 19, 
  27, 18, 29, 25, 0, 0, 19, 27, 18, 29, 
  25, 0, 0, 19, 27, 0, 0, 0, 14, 14, 
  0, 0, 0, 0, 11, 11, 13, 13, 12, 12, 
  14, 49, 15, 15, 0, 0, 11, 0, 13, 0, 
  12, 55, 0, 76, 15, 0, 0, -11, -41, 0, 
  0, -11, 0, 46, 0, -11, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 76, 0, 0, 0, -11, 
  -41, 0, -41, -11, 0, 46, 0, -11, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 18, 29, 25, 
  0, 0, 19, 27, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 20, 24, 22, 23, 21, 26, 0, 
  0, 0, 18, 29, 25, 0, 0, 19, 27, 0, 
  0, 28, 0, 0, 0, 0, 0, 0, 20, 24, 
  22, 23, 21, 26, 0, 0, 0, 18, 29, 25, 
  0, 0, 19, 27, 0, 0, 28, 0, 0, 68, 
  0, 0, 0, 20, 24, 22, 23, 21, 26, 0, 
  0, 0, 18, 29, 25, 0, 0, 19, 27, 0, 
  0, 28, 0, 0, 83, 0, 0, 0, 20, 24, 
  22, 23, 21, 26, 0, 0, 0, 

  40, 85, 48, 3, 77, 41, 39, 84, 34, 32, 
  33, 31, 30, 35, 52, 36, 17, 37, 38, 0, 
  59, 59, 59, 59, 81, 82, 0, 0, 67, 58, 
  72, 0, 75, 69, 0, 80, 42, 43, 42, 43, 
  78, 44, 42, 43, 0, 0, 63, 0, 0, 0, 
  0, 0, 0, 0, 0, 42, 43, 0, 0, 66, 
  0, 0, 0, 0, 0, 0, 0, 0};

const int ExpressionTable::action_check [] = {
  8, 11, 14, 7, 0, 8, 17, 7, 9, 8, 
  -1, 13, -1, 11, 11, -1, 11, 11, 5, 13, 
  15, -1, -1, 8, 8, -1, 23, 12, 12, -1, 
  3, 16, 16, 6, 7, -1, 8, 8, 8, 8, 
  12, 12, 12, 12, 16, 16, 16, -1, 2, -1, 
  -1, -1, -1, -1, 8, -1, 10, 3, 12, -1, 
  6, 7, 16, 1, 2, 3, -1, -1, 6, 7, 
  1, 2, 3, -1, -1, 6, 7, 1, 2, 3, 
  2, 2, 6, 7, -1, -1, 8, 8, 10, 10, 
  12, 12, -1, 2, 16, 16, -1, -1, -1, 8, 
  -1, 10, -1, 12, 1, 2, 3, 16, -1, 6, 
  7, 1, 2, 3, -1, -1, 6, 7, 1, 2, 
  3, -1, -1, 6, 7, -1, -1, -1, 2, 2, 
  -1, -1, -1, -1, 8, 8, 10, 10, 12, 12, 
  2, 15, 16, 16, -1, -1, 8, -1, 10, -1, 
  12, 13, -1, 4, 16, -1, -1, 8, 9, -1, 
  -1, 12, -1, 14, -1, 16, -1, -1, -1, -1, 
  -1, -1, -1, -1, -1, 4, -1, -1, -1, 8, 
  9, -1, 11, 12, -1, 14, -1, 16, -1, -1, 
  -1, -1, -1, -1, -1, -1, -1, 1, 2, 3, 
  -1, -1, 6, 7, -1, -1, -1, -1, -1, -1, 
  -1, -1, -1, 17, 18, 19, 20, 21, 22, -1, 
  -1, -1, 1, 2, 3, -1, -1, 6, 7, -1, 
  -1, 10, -1, -1, -1, -1, -1, -1, 17, 18, 
  19, 20, 21, 22, -1, -1, -1, 1, 2, 3, 
  -1, -1, 6, 7, -1, -1, 10, -1, -1, 13, 
  -1, -1, -1, 17, 18, 19, 20, 21, 22, -1, 
  -1, -1, 1, 2, 3, -1, -1, 6, 7, -1, 
  -1, 10, -1, -1, 13, -1, -1, -1, 17, 18, 
  19, 20, 21, 22, -1, -1, -1, 

  1, 1, 9, 1, 1, 1, 1, 1, 1, 1, 
  1, 1, 1, 1, 1, 1, 1, 1, 1, -1, 
  2, 2, 2, 2, 1, 2, -1, -1, 1, 10, 
  12, -1, 12, 12, -1, 12, 2, 3, 2, 3, 
  6, 5, 2, 3, -1, -1, 6, -1, -1, -1, 
  -1, -1, -1, -1, -1, 2, 3, -1, -1, 6, 
  -1, -1, -1, -1, -1, -1, -1, -1};

