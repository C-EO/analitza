// This file was generated by qlalr - DO NOT EDIT!
#include "expressiontable_p.h"

const char *const ExpressionTable::spell [] = {
  "end of file", "+", "-", "*", ":=", "..", "/", "^", "function", "block", 
  "->", "?", ",", "(", ")", "{", "}", "value", "=", "|", 
  0, 0, 
#ifndef QLALR_NO_EXPRESSIONTABLE_DEBUG_INFO
"Program", "Expression", "Value", "Func", "Block", "FBody", "Parameters", "BVars", 
  "BValue", "Limits", "BVarList", "$accept"
#endif // QLALR_NO_EXPRESSIONTABLE_DEBUG_INFO
};

const int ExpressionTable::lhs [] = {
  22, 24, 25, 26, 23, 23, 23, 23, 27, 27, 
  23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 
  23, 28, 28, 30, 30, 29, 29, 32, 32, 31, 
  33};

const int ExpressionTable:: rhs[] = {
  1, 1, 1, 1, 1, 3, 4, 3, 1, 3, 
  4, 3, 2, 2, 3, 3, 3, 3, 3, 3, 
  3, 1, 3, 1, 3, 1, 3, 3, 3, 3, 
  2};


#ifndef QLALR_NO_EXPRESSIONTABLE_DEBUG_INFO
const int ExpressionTable::rule_info [] = {
    22, 23
  , 24, 17
  , 25, 8
  , 26, 9
  , 23, 24
  , 23, 13, 23, 14
  , 23, 25, 13, 27, 14
  , 23, 25, 13, 14
  , 27, 28
  , 27, 29, 19, 28
  , 23, 26, 15, 28, 16
  , 23, 29, 10, 23
  , 23, 2, 23
  , 23, 11, 23
  , 23, 23, 1, 23
  , 23, 23, 2, 23
  , 23, 23, 3, 23
  , 23, 23, 6, 23
  , 23, 23, 7, 23
  , 23, 23, 11, 23
  , 23, 24, 4, 23
  , 28, 23
  , 28, 28, 12, 23
  , 30, 24
  , 30, 24, 18, 31
  , 29, 30
  , 29, 13, 32, 14
  , 32, 30, 12, 30
  , 32, 32, 12, 30
  , 31, 24, 5, 24
  , 33, 22, 0};

const int ExpressionTable::rule_index [] = {
  0, 2, 4, 6, 8, 10, 14, 19, 23, 25, 
  29, 34, 38, 41, 44, 48, 52, 56, 60, 64, 
  68, 72, 74, 78, 80, 84, 86, 90, 94, 98, 
  102};
#endif // QLALR_NO_EXPRESSIONTABLE_DEBUG_INFO

const int ExpressionTable::action_default [] = {
  0, 26, 0, 0, 1, 0, 0, 5, 4, 3, 
  0, 0, 0, 2, 0, 12, 0, 0, 0, 0, 
  0, 0, 15, 18, 17, 19, 20, 16, 0, 22, 
  0, 0, 11, 23, 0, 0, 0, 9, 8, 0, 
  10, 7, 31, 0, 0, 21, 25, 0, 0, 30, 
  26, 0, 0, 5, 0, 28, 24, 0, 27, 29, 
  6, 14, 13};

const int ExpressionTable::goto_default [] = {
  6, 29, 7, 5, 3, 36, 30, 2, 1, 46, 
  51, 0};

const int ExpressionTable::action_index [] = {
  91, -22, -8, -14, 71, -4, 8, 20, -22, -22, 
  91, 91, 91, -22, 91, 71, 91, 91, 91, 91, 
  91, 91, 29, 4, 10, -22, 50, 29, 91, 71, 
  7, 91, -22, 71, 77, 2, -7, -6, -22, 91, 
  -9, -22, -22, 52, -13, 71, -22, -5, -12, -22, 
  -2, 1, 112, 16, -3, -22, 0, -1, -22, -22, 
  -22, 39, -22, 

  20, -12, -12, -12, -12, -12, -12, -12, -12, -12, 
  31, 4, 3, -12, 5, -12, 2, 0, 1, 10, 
  11, 13, -12, -12, -12, -12, -12, -12, -12, -12, 
  -12, 9, -12, -12, 12, -12, -12, -12, -12, 7, 
  -12, -12, -12, 8, 6, -12, -12, -12, -2, -12, 
  -12, -12, -12, -12, 15, -12, -12, 14, -12, -12, 
  -12, -12, -12};

const int ExpressionTable::action_info [] = {
  48, 28, 14, 31, 13, 13, 31, 41, 42, 34, 
  54, 19, 14, 57, 13, 58, 13, 19, 44, 31, 
  43, 39, 0, 32, 43, 0, -24, 0, -24, 0, 
  -24, 0, 18, 0, 44, 17, 19, 0, 44, -24, 
  16, 21, 18, 0, 0, 17, 19, 0, 0, 0, 
  20, 16, 21, 18, 12, 0, 17, 19, 0, 0, 
  9, 8, 0, 11, 0, 10, 0, 0, 0, 13, 
  0, 0, 16, 21, 18, 0, 0, 17, 19, 12, 
  0, 0, 20, 0, 0, 9, 8, 0, 11, 0, 
  10, 38, 0, 12, 13, 0, 0, 0, 0, 9, 
  8, 0, 11, 0, 10, 0, 0, 0, 13, 0, 
  0, 0, 0, 16, 21, 18, 0, 0, 17, 19, 
  0, 0, 0, 20, 0, 0, 60, 0, 0, 0, 
  0, 0, 0, 0, 

  49, 23, 24, 22, 62, 61, 15, 0, 47, 45, 
  33, 25, 26, 40, 27, 0, 56, 56, 37, 35, 
  0, 4, 59, 55, 0, 0, 0, 0, 0, 0, 
  0, 0, 52, 53, 0, 0, 0, 0, 0, 50, 
  0, 0, 0};

const int ExpressionTable::action_check [] = {
  5, 15, 10, 12, 17, 17, 12, 14, 0, 13, 
  12, 7, 10, 12, 17, 14, 17, 7, 18, 12, 
  4, 19, -1, 16, 4, -1, 10, -1, 12, -1, 
  10, -1, 3, -1, 18, 6, 7, -1, 18, 19, 
  1, 2, 3, -1, -1, 6, 7, -1, -1, -1, 
  11, 1, 2, 3, 2, -1, 6, 7, -1, -1, 
  8, 9, -1, 11, -1, 13, -1, -1, -1, 17, 
  -1, -1, 1, 2, 3, -1, -1, 6, 7, 2, 
  -1, -1, 11, -1, -1, 8, 9, -1, 11, -1, 
  13, 14, -1, 2, 17, -1, -1, -1, -1, 8, 
  9, -1, 11, -1, 13, -1, -1, -1, 17, -1, 
  -1, -1, -1, 1, 2, 3, -1, -1, 6, 7, 
  -1, -1, -1, 11, -1, -1, 14, -1, -1, -1, 
  -1, -1, -1, -1, 

  2, 1, 1, 1, 1, 1, 1, -1, 2, 1, 
  1, 1, 1, 6, 1, -1, 2, 2, 6, 7, 
  -1, 1, 8, 8, -1, -1, -1, -1, -1, -1, 
  -1, -1, 1, 2, -1, -1, -1, -1, -1, 8, 
  -1, -1, -1};

