// This file was generated by qlalr - DO NOT EDIT!
#include "expressiontable_p.h"

const char *const ExpressionTable::spell [] = {
  "end of file", "+", "-", "*", ":=", "..", "/", "^", "identifier", "->", 
  "?", ",", "(", ")", "{", "}", "value", "=", "<", ">", 
  ">=", "<=", "!=", ":", "@", 0, 0, 
#ifndef QLALR_NO_EXPRESSIONTABLE_DEBUG_INFO
"Program", "Declaration", "Expression", 
  "Id", "Number", "Value", "PrimaryExpression", "PrimaryExpressionExt", "FunctionId", "FBody", "Parameters", "BVars", "Limits", 
  "BValue", "BVarList", "$accept"
#endif // QLALR_NO_EXPRESSIONTABLE_DEBUG_INFO
};

const int ExpressionTable::lhs [] = {
  27, 27, 28, 30, 31, 32, 32, 33, 34, 34, 
  29, 35, 35, 29, 29, 29, 36, 36, 36, 36, 
  33, 33, 29, 29, 29, 29, 29, 29, 29, 29, 
  29, 29, 29, 29, 29, 29, 29, 29, 37, 37, 
  38, 38, 40, 41, 41, 39, 42};

const int ExpressionTable:: rhs[] = {
  1, 1, 3, 1, 1, 1, 1, 1, 3, 1, 
  1, 3, 1, 2, 4, 3, 1, 3, 5, 5, 
  3, 4, 3, 2, 2, 3, 3, 3, 2, 3, 
  3, 3, 3, 3, 3, 3, 3, 3, 1, 3, 
  1, 3, 1, 3, 3, 3, 2};


#ifndef QLALR_NO_EXPRESSIONTABLE_DEBUG_INFO
const int ExpressionTable::rule_info [] = {
    27, 28
  , 27, 29
  , 28, 30, 4, 29
  , 30, 8
  , 31, 16
  , 32, 31
  , 32, 30
  , 33, 32
  , 34, 12, 29, 13
  , 34, 33
  , 29, 34
  , 35, 12, 29, 13
  , 35, 30
  , 29, 35, 33
  , 29, 35, 12, 36, 13
  , 29, 35, 12, 13
  , 36, 37
  , 36, 37, 23, 38
  , 36, 37, 23, 38, 17, 39
  , 36, 37, 23, 38, 24, 29
  , 33, 30, 14, 15
  , 33, 30, 14, 37, 15
  , 29, 38, 9, 29
  , 29, 2, 29
  , 29, 10, 29
  , 29, 29, 1, 29
  , 29, 29, 2, 29
  , 29, 29, 3, 29
  , 29, 31, 34
  , 29, 29, 6, 29
  , 29, 29, 7, 29
  , 29, 29, 17, 29
  , 29, 29, 20, 29
  , 29, 29, 21, 29
  , 29, 29, 18, 29
  , 29, 29, 19, 29
  , 29, 29, 22, 29
  , 29, 29, 10, 29
  , 37, 29
  , 37, 37, 11, 29
  , 38, 40
  , 38, 12, 41, 13
  , 40, 30
  , 41, 40, 11, 40
  , 41, 41, 11, 40
  , 39, 34, 5, 34
  , 42, 27, 0};

const int ExpressionTable::rule_index [] = {
  0, 2, 4, 8, 10, 12, 14, 16, 18, 22, 
  24, 26, 30, 32, 35, 40, 44, 46, 50, 56, 
  62, 66, 71, 75, 78, 81, 85, 89, 93, 96, 
  100, 104, 108, 112, 116, 120, 124, 128, 132, 134, 
  138, 140, 144, 146, 150, 154, 158};
#endif // QLALR_NO_EXPRESSIONTABLE_DEBUG_INFO

const int ExpressionTable::action_default [] = {
  0, 41, 0, 1, 2, 0, 7, 6, 10, 11, 
  0, 8, 4, 0, 0, 0, 5, 0, 23, 7, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 26, 30, 32, 34, 36, 33, 35, 28, 
  37, 31, 38, 27, 0, 39, 0, 21, 0, 22, 
  40, 7, 6, 14, 0, 0, 17, 16, 15, 0, 
  18, 43, 0, 0, 0, 20, 19, 0, 0, 0, 
  46, 0, 9, 0, 0, 0, 44, 0, 42, 45, 
  0, 3, 29, 47, 41, 0, 7, 9, 25, 24};

const int ExpressionTable::goto_default [] = {
  10, 3, 45, 19, 7, 11, 8, 9, 5, 55, 
  46, 2, 66, 1, 74, 0};

const int ExpressionTable::action_index [] = {
  62, -27, 10, -27, 165, 20, 84, 26, -27, -27, 
  37, -27, -27, 62, 62, 62, -27, 62, 165, 38, 
  62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 
  62, 62, 24, -3, 88, 88, 54, 88, 88, -4, 
  88, -27, 139, 19, 113, 165, 6, -27, 62, -27, 
  165, -7, -27, -27, 63, -11, 1, -27, -27, 2, 
  -1, -27, -8, 62, 32, 165, -27, 4, 62, 33, 
  -27, 217, -27, -6, 7, -2, -27, 0, -27, -27, 
  62, 165, -27, -27, -10, 191, 92, 27, 165, -27, 

  17, -16, -16, -16, -16, 34, -16, 53, -16, -16, 
  -16, -16, -16, 40, 12, -1, -16, 13, -16, -16, 
  6, 10, 8, 11, 26, 5, 9, 16, 14, -2, 
  3, 0, -16, -16, -16, -16, -16, -16, -16, -16, 
  -16, -16, -16, -16, -16, -16, -16, -16, 1, -16, 
  -16, -16, -16, -16, 15, -16, -16, -16, -16, 18, 
  -16, -16, 19, 7, 23, -16, -16, -16, 4, 32, 
  -16, -16, -16, -16, -16, 21, -16, 20, -16, -16, 
  2, -16, -16, -16, -16, -16, -16, -16, -16, -16};

const int ExpressionTable::action_info [] = {
  12, 75, 58, 29, 29, 75, 12, 44, 12, 69, 
  12, 0, 48, 0, 62, 0, 64, 48, 77, 17, 
  78, 49, 27, 63, 59, 21, 29, 27, 12, 0, 
  21, 29, 54, 0, 12, -12, 16, 83, 68, -12, 
  12, 12, 16, -12, 68, 68, -13, -43, 16, 16, 
  -13, 0, 44, 0, -13, 20, 31, 27, 0, 0, 
  21, 29, 0, 0, 15, 15, 0, 0, 0, 0, 
  12, 12, 14, 14, 13, 13, 57, 0, 16, 16, 
  0, 0, 0, 0, 0, 0, 0, 0, 80, 20, 
  31, 27, -13, -43, 21, 29, -13, 0, 44, 0, 
  -13, -43, 0, -43, -13, 0, 44, 0, -13, 0, 
  0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 
  0, 12, 0, 14, 0, 13, 0, 0, 47, 16, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  20, 31, 27, 0, 0, 21, 29, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 22, 26, 24, 25, 
  23, 28, 0, 0, 0, 0, 20, 31, 27, 0, 
  0, 21, 29, 0, 0, 30, 0, 0, 0, 0, 
  0, 0, 22, 26, 24, 25, 23, 28, 0, 0, 
  0, 0, 20, 31, 27, 0, 0, 21, 29, 0, 
  0, 30, 0, 0, 87, 0, 0, 0, 22, 26, 
  24, 25, 23, 28, 0, 0, 0, 0, 20, 31, 
  27, 0, 0, 21, 29, 0, 0, 30, 0, 0, 
  72, 0, 0, 0, 22, 26, 24, 25, 23, 28, 
  0, 0, 0, 0, 

  41, 89, 43, 50, 81, 42, 71, 37, 32, 65, 
  34, 38, 33, 35, 88, 18, 40, 0, 39, 4, 
  6, 61, 61, 61, 61, 56, 51, 52, 36, 60, 
  67, 0, 73, 79, 76, 51, 52, 51, 52, 70, 
  53, 0, 85, 86, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 84, 0, 0, 51, 52, 0, 0, 
  82, 0, 0, 0, 0, 0, 0, 0, 0};

const int ExpressionTable::action_check [] = {
  8, 11, 13, 7, 7, 11, 8, 14, 8, 5, 
  8, -1, 11, -1, 12, -1, 17, 11, 11, 9, 
  13, 15, 3, 24, 23, 6, 7, 3, 8, -1, 
  6, 7, 12, -1, 8, 8, 16, 0, 12, 12, 
  8, 8, 16, 16, 12, 12, 8, 9, 16, 16, 
  12, -1, 14, -1, 16, 1, 2, 3, -1, -1, 
  6, 7, -1, -1, 2, 2, -1, -1, -1, -1, 
  8, 8, 10, 10, 12, 12, 13, -1, 16, 16, 
  -1, -1, -1, -1, -1, -1, -1, -1, 4, 1, 
  2, 3, 8, 9, 6, 7, 12, -1, 14, -1, 
  8, 9, -1, 11, 12, -1, 14, -1, 16, -1, 
  -1, -1, -1, -1, -1, 2, -1, -1, -1, -1, 
  -1, 8, -1, 10, -1, 12, -1, -1, 15, 16, 
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
  1, 2, 3, -1, -1, 6, 7, -1, -1, -1, 
  -1, -1, -1, -1, -1, -1, 17, 18, 19, 20, 
  21, 22, -1, -1, -1, -1, 1, 2, 3, -1, 
  -1, 6, 7, -1, -1, 10, -1, -1, -1, -1, 
  -1, -1, 17, 18, 19, 20, 21, 22, -1, -1, 
  -1, -1, 1, 2, 3, -1, -1, 6, 7, -1, 
  -1, 10, -1, -1, 13, -1, -1, -1, 17, 18, 
  19, 20, 21, 22, -1, -1, -1, -1, 1, 2, 
  3, -1, -1, 6, 7, -1, -1, 10, -1, -1, 
  13, -1, -1, -1, 17, 18, 19, 20, 21, 22, 
  -1, -1, -1, -1, 

  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
  2, 2, 2, 2, 2, 2, 2, -1, 2, 2, 
  3, 3, 3, 3, 3, 10, 3, 4, 2, 11, 
  7, -1, 13, 13, 13, 3, 4, 3, 4, 7, 
  6, -1, 2, 3, -1, -1, -1, -1, -1, -1, 
  -1, -1, -1, 13, -1, -1, 3, 4, -1, -1, 
  7, -1, -1, -1, -1, -1, -1, -1, -1};

