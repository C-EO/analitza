// This file was generated by qlalr - DO NOT EDIT!
#include "expressiontable_p.h"

const char *const ExpressionTable::spell [] = {
  "end of file", "+", "-", "*", ":=", "..", "/", "^", "identifier", "->", 
  "?", ",", "(", ")", "{", "}", "[", "]", "value", "=", 
  "<", ">", ">=", "<=", "!=", ":", "@", "//Comment//", "abc", 0, 
  0, 
#ifndef QLALR_NO_EXPRESSIONTABLE_DEBUG_INFO
"Program", "Declaration", "Expression", "Id", "String", "Number", "Value", "PrimaryExpression", "PrimaryExpressionExt", 
  "SubscriptExpression", "FunctionCall", "FunctionId", "FBody", "Parameters", "BVars", "Limits", "BValue", "BVarList", "$accept"
#endif // QLALR_NO_EXPRESSIONTABLE_DEBUG_INFO
};

const int ExpressionTable::lhs [] = {
  31, 31, 31, 32, 34, 35, 36, 37, 37, 37, 
  38, 39, 40, 39, 39, 39, 33, 42, 42, 33, 
  41, 41, 43, 43, 43, 43, 38, 38, 33, 33, 
  33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 
  33, 33, 33, 33, 44, 44, 45, 45, 47, 48, 
  48, 46, 49};

const int ExpressionTable:: rhs[] = {
  0, 1, 1, 3, 1, 1, 1, 1, 1, 1, 
  1, 3, 4, 1, 1, 1, 1, 3, 1, 2, 
  4, 3, 1, 3, 5, 5, 3, 4, 3, 2, 
  2, 3, 3, 3, 2, 3, 3, 3, 3, 3, 
  3, 3, 3, 3, 1, 3, 1, 3, 1, 3, 
  3, 3, 2};


#ifndef QLALR_NO_EXPRESSIONTABLE_DEBUG_INFO
const int ExpressionTable::rule_info [] = {
    31
  , 31, 32
  , 31, 33
  , 32, 34, 4, 33
  , 34, 8
  , 35, 28
  , 36, 18
  , 37, 36
  , 37, 35
  , 37, 34
  , 38, 37
  , 39, 12, 33, 13
  , 40, 39, 16, 33, 17
  , 39, 38
  , 39, 40
  , 39, 41
  , 33, 39
  , 42, 12, 33, 13
  , 42, 34
  , 33, 42, 38
  , 41, 42, 12, 43, 13
  , 41, 42, 12, 13
  , 43, 44
  , 43, 44, 25, 45
  , 43, 44, 25, 45, 19, 46
  , 43, 44, 25, 45, 26, 33
  , 38, 34, 14, 15
  , 38, 34, 14, 44, 15
  , 33, 45, 9, 33
  , 33, 2, 33
  , 33, 10, 33
  , 33, 33, 1, 33
  , 33, 33, 2, 33
  , 33, 33, 3, 33
  , 33, 36, 39
  , 33, 33, 6, 33
  , 33, 33, 7, 33
  , 33, 33, 19, 33
  , 33, 33, 22, 33
  , 33, 33, 23, 33
  , 33, 33, 20, 33
  , 33, 33, 21, 33
  , 33, 33, 24, 33
  , 33, 33, 10, 33
  , 44, 33
  , 44, 44, 11, 33
  , 45, 47
  , 45, 12, 48, 13
  , 47, 34
  , 48, 47, 11, 47
  , 48, 48, 11, 47
  , 46, 39, 5, 39
  , 49, 31, 0};

const int ExpressionTable::rule_index [] = {
  0, 1, 3, 5, 9, 11, 13, 15, 17, 19, 
  21, 23, 27, 32, 34, 36, 38, 40, 44, 46, 
  49, 54, 58, 60, 64, 70, 76, 80, 85, 89, 
  92, 95, 99, 103, 107, 110, 114, 118, 122, 126, 
  130, 134, 138, 142, 146, 148, 152, 154, 158, 160, 
  164, 168, 172};
#endif // QLALR_NO_EXPRESSIONTABLE_DEBUG_INFO

const int ExpressionTable::action_default [] = {
  1, 47, 0, 2, 3, 16, 0, 10, 8, 14, 
  17, 0, 9, 15, 11, 5, 0, 0, 6, 0, 
  7, 0, 29, 10, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 32, 36, 38, 40, 
  42, 39, 41, 34, 43, 37, 44, 33, 0, 45, 
  0, 27, 0, 28, 46, 10, 8, 20, 0, 0, 
  23, 22, 21, 0, 24, 49, 0, 0, 0, 26, 
  0, 10, 25, 0, 0, 0, 0, 52, 0, 13, 
  0, 12, 0, 0, 0, 50, 0, 48, 51, 0, 
  4, 35, 53, 47, 10, 31, 30};

const int ExpressionTable::goto_default [] = {
  11, 3, 49, 23, 12, 8, 14, 9, 10, 13, 
  5, 6, 59, 50, 2, 72, 1, 83, 0};

const int ExpressionTable::action_index [] = {
  121, -31, -2, -31, 169, -31, 44, 100, 35, -31, 
  -11, 34, -31, -31, -31, -31, 121, 121, -31, 121, 
  -31, 121, 210, 93, 121, 121, 121, 121, 121, 121, 
  121, 121, 121, 121, 121, 121, 29, -6, 92, 92, 
  92, 92, 92, 6, 92, -31, 180, 62, 122, 210, 
  7, -31, 121, -31, 210, -12, -31, -31, 150, -4, 
  8, -31, -31, 9, 1, -31, -5, 68, 33, 210, 
  3, 11, -31, 23, 69, 30, 121, -16, 270, -31, 
  240, 32, 5, 13, 0, -31, 4, -31, -31, 121, 
  210, -10, -31, -1, 108, 210, -3, 

  23, -19, -19, -19, -19, -19, 48, -19, 64, -19, 
  -19, -19, -19, -19, -19, -19, 26, 16, -19, 14, 
  -19, 10, -19, -19, 32, -2, 12, 8, 17, -1, 
  15, 7, 3, 5, 1, 2, -19, -19, -19, -19, 
  -19, -19, -19, -19, -19, -19, -19, -19, -19, -19, 
  -19, -19, 0, -19, -19, -19, -19, -19, 11, -19, 
  -19, -19, -19, 18, -19, -19, 19, 9, 36, -19, 
  -19, -19, -19, -19, 13, 49, 6, -19, -19, -19, 
  -19, -19, -19, -19, 20, -19, 24, -19, -19, 4, 
  -19, -19, -19, -19, -19, -19, -19};

const int ExpressionTable::action_info [] = {
  76, 33, 48, 15, 33, 76, 76, 21, 15, 62, 
  84, 0, 15, 33, 0, 58, 84, 15, 52, 52, 
  68, 66, 53, -19, 86, 48, 87, 67, 75, 0, 
  0, 0, 31, 63, 92, 25, 33, 0, 15, 76, 
  -18, 15, 74, 15, -18, 74, 0, 74, 20, 0, 
  -18, 20, 15, 20, 0, 0, 58, 0, 18, 0, 
  -18, 18, 20, 18, 0, 31, 0, 0, 25, 33, 
  19, 19, 18, 0, 0, 0, 15, 15, 17, 17, 
  16, 16, 0, 0, 0, 0, 20, 20, 0, 0, 
  0, 0, 0, 24, 35, 31, 18, 18, 25, 33, 
  0, -19, -49, 0, 89, -19, 0, 48, -19, -49, 
  0, -19, -19, 0, 48, 0, -19, -49, -19, -49, 
  -19, -19, 48, 19, 19, 0, -19, 0, -19, 15, 
  15, 17, 17, 16, 16, 0, -19, 51, 0, 20, 
  20, 0, 0, 0, 0, 0, 0, 0, 0, 18, 
  18, 0, 19, 0, 0, 0, 0, 0, 15, 0, 
  17, 0, 16, 61, 0, 0, 0, 0, 20, 0, 
  24, 35, 31, 0, 0, 25, 33, 0, 18, 34, 
  0, 24, 35, 31, 0, 0, 25, 33, 26, 30, 
  28, 29, 27, 32, 0, 0, 0, 0, 0, 26, 
  30, 28, 29, 27, 32, 0, 0, 0, 0, 0, 
  0, 24, 35, 31, 0, 0, 25, 33, 0, 0, 
  34, 0, 0, 0, 0, 0, 0, 0, 0, 26, 
  30, 28, 29, 27, 32, 0, 0, 0, 0, 0, 
  0, 24, 35, 31, 0, 0, 25, 33, 0, 0, 
  34, 0, 0, 81, 0, 0, 0, 0, 0, 26, 
  30, 28, 29, 27, 32, 0, 0, 0, 0, 0, 
  0, 24, 35, 31, 0, 0, 25, 33, 0, 0, 
  34, 0, 0, 0, 0, 0, 0, 79, 0, 26, 
  30, 28, 29, 27, 32, 0, 0, 0, 0, 0, 
  0, 

  37, 41, 54, 46, 47, 44, 90, 45, 78, 43, 
  39, 69, 22, 0, 38, 80, 96, 42, 95, 40, 
  0, 65, 65, 65, 60, 4, 7, 65, 80, 94, 
  0, 0, 64, 0, 36, 82, 85, 0, 0, 71, 
  88, 56, 93, 0, 73, 0, 0, 70, 0, 0, 
  0, 55, 71, 56, 56, 57, 0, 77, 0, 0, 
  70, 0, 0, 0, 0, 0, 0, 71, 0, 56, 
  0, 0, 91, 0, 0, 70, 0, 0, 0, 0, 
  0, 0, 0};

const int ExpressionTable::action_check [] = {
  16, 7, 14, 8, 7, 16, 16, 9, 8, 13, 
  11, -1, 8, 7, -1, 12, 11, 8, 11, 11, 
  19, 12, 15, 12, 11, 14, 13, 26, 5, -1, 
  -1, -1, 3, 25, 0, 6, 7, -1, 8, 16, 
  8, 8, 12, 8, 12, 12, -1, 12, 18, -1, 
  18, 18, 8, 18, -1, -1, 12, -1, 28, -1, 
  28, 28, 18, 28, -1, 3, -1, -1, 6, 7, 
  2, 2, 28, -1, -1, -1, 8, 8, 10, 10, 
  12, 12, -1, -1, -1, -1, 18, 18, -1, -1, 
  -1, -1, -1, 1, 2, 3, 28, 28, 6, 7, 
  -1, 8, 9, -1, 4, 12, -1, 14, 8, 9, 
  -1, 18, 12, -1, 14, -1, 8, 9, 18, 11, 
  12, 28, 14, 2, 2, -1, 18, -1, 28, 8, 
  8, 10, 10, 12, 12, -1, 28, 15, -1, 18, 
  18, -1, -1, -1, -1, -1, -1, -1, -1, 28, 
  28, -1, 2, -1, -1, -1, -1, -1, 8, -1, 
  10, -1, 12, 13, -1, -1, -1, -1, 18, -1, 
  1, 2, 3, -1, -1, 6, 7, -1, 28, 10, 
  -1, 1, 2, 3, -1, -1, 6, 7, 19, 20, 
  21, 22, 23, 24, -1, -1, -1, -1, -1, 19, 
  20, 21, 22, 23, 24, -1, -1, -1, -1, -1, 
  -1, 1, 2, 3, -1, -1, 6, 7, -1, -1, 
  10, -1, -1, -1, -1, -1, -1, -1, -1, 19, 
  20, 21, 22, 23, 24, -1, -1, -1, -1, -1, 
  -1, 1, 2, 3, -1, -1, 6, 7, -1, -1, 
  10, -1, -1, 13, -1, -1, -1, -1, -1, 19, 
  20, 21, 22, 23, 24, -1, -1, -1, -1, -1, 
  -1, 1, 2, 3, -1, -1, 6, 7, -1, -1, 
  10, -1, -1, -1, -1, -1, -1, 17, -1, 19, 
  20, 21, 22, 23, 24, -1, -1, -1, -1, -1, 
  -1, 

  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
  2, 2, 2, -1, 2, 2, 2, 2, 2, 2, 
  -1, 3, 3, 3, 13, 2, 3, 3, 2, 3, 
  -1, -1, 14, -1, 2, 16, 16, -1, -1, 3, 
  16, 5, 16, -1, 8, -1, -1, 11, -1, -1, 
  -1, 3, 3, 5, 5, 7, -1, 8, -1, -1, 
  11, -1, -1, -1, -1, -1, -1, 3, -1, 5, 
  -1, -1, 8, -1, -1, 11, -1, -1, -1, -1, 
  -1, -1, -1};

